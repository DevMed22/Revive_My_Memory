// Generated by view binder compiler. Do not edit!
package com.example.revivemymemory.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.revivemymemory.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextInputEditText BOD;

  @NonNull
  public final TextInputEditText addressInputEditText;

  @NonNull
  public final TextInputLayout addressTil;

  @NonNull
  public final TextInputEditText assn;

  @NonNull
  public final ImageView backBtn;

  @NonNull
  public final TextInputLayout birthTil;

  @NonNull
  public final TextInputLayout email;

  @NonNull
  public final TextInputEditText emailInput;

  @NonNull
  public final TextInputLayout firstname;

  @NonNull
  public final TextInputEditText fname;

  @NonNull
  public final TextInputLayout lastname;

  @NonNull
  public final TextInputEditText lname;

  @NonNull
  public final TextInputEditText passwordInputEditText;

  @NonNull
  public final TextInputLayout passwordTil;

  @NonNull
  public final TextInputLayout phone;

  @NonNull
  public final TextInputEditText phoneNum;

  @NonNull
  public final CircleImageView registerBtn;

  @NonNull
  public final TextInputLayout ssn;

  @NonNull
  public final RelativeLayout toolbarRL;

  private ActivityRegisterBinding(@NonNull ScrollView rootView, @NonNull TextInputEditText BOD,
      @NonNull TextInputEditText addressInputEditText, @NonNull TextInputLayout addressTil,
      @NonNull TextInputEditText assn, @NonNull ImageView backBtn,
      @NonNull TextInputLayout birthTil, @NonNull TextInputLayout email,
      @NonNull TextInputEditText emailInput, @NonNull TextInputLayout firstname,
      @NonNull TextInputEditText fname, @NonNull TextInputLayout lastname,
      @NonNull TextInputEditText lname, @NonNull TextInputEditText passwordInputEditText,
      @NonNull TextInputLayout passwordTil, @NonNull TextInputLayout phone,
      @NonNull TextInputEditText phoneNum, @NonNull CircleImageView registerBtn,
      @NonNull TextInputLayout ssn, @NonNull RelativeLayout toolbarRL) {
    this.rootView = rootView;
    this.BOD = BOD;
    this.addressInputEditText = addressInputEditText;
    this.addressTil = addressTil;
    this.assn = assn;
    this.backBtn = backBtn;
    this.birthTil = birthTil;
    this.email = email;
    this.emailInput = emailInput;
    this.firstname = firstname;
    this.fname = fname;
    this.lastname = lastname;
    this.lname = lname;
    this.passwordInputEditText = passwordInputEditText;
    this.passwordTil = passwordTil;
    this.phone = phone;
    this.phoneNum = phoneNum;
    this.registerBtn = registerBtn;
    this.ssn = ssn;
    this.toolbarRL = toolbarRL;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.BOD;
      TextInputEditText BOD = ViewBindings.findChildViewById(rootView, id);
      if (BOD == null) {
        break missingId;
      }

      id = R.id.addressInputEditText;
      TextInputEditText addressInputEditText = ViewBindings.findChildViewById(rootView, id);
      if (addressInputEditText == null) {
        break missingId;
      }

      id = R.id.addressTil;
      TextInputLayout addressTil = ViewBindings.findChildViewById(rootView, id);
      if (addressTil == null) {
        break missingId;
      }

      id = R.id.assn;
      TextInputEditText assn = ViewBindings.findChildViewById(rootView, id);
      if (assn == null) {
        break missingId;
      }

      id = R.id.backBtn;
      ImageView backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.birthTil;
      TextInputLayout birthTil = ViewBindings.findChildViewById(rootView, id);
      if (birthTil == null) {
        break missingId;
      }

      id = R.id.email;
      TextInputLayout email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.emailInput;
      TextInputEditText emailInput = ViewBindings.findChildViewById(rootView, id);
      if (emailInput == null) {
        break missingId;
      }

      id = R.id.firstname;
      TextInputLayout firstname = ViewBindings.findChildViewById(rootView, id);
      if (firstname == null) {
        break missingId;
      }

      id = R.id.fname;
      TextInputEditText fname = ViewBindings.findChildViewById(rootView, id);
      if (fname == null) {
        break missingId;
      }

      id = R.id.lastname;
      TextInputLayout lastname = ViewBindings.findChildViewById(rootView, id);
      if (lastname == null) {
        break missingId;
      }

      id = R.id.lname;
      TextInputEditText lname = ViewBindings.findChildViewById(rootView, id);
      if (lname == null) {
        break missingId;
      }

      id = R.id.passwordInputEditText;
      TextInputEditText passwordInputEditText = ViewBindings.findChildViewById(rootView, id);
      if (passwordInputEditText == null) {
        break missingId;
      }

      id = R.id.passwordTil;
      TextInputLayout passwordTil = ViewBindings.findChildViewById(rootView, id);
      if (passwordTil == null) {
        break missingId;
      }

      id = R.id.phone;
      TextInputLayout phone = ViewBindings.findChildViewById(rootView, id);
      if (phone == null) {
        break missingId;
      }

      id = R.id.phoneNum;
      TextInputEditText phoneNum = ViewBindings.findChildViewById(rootView, id);
      if (phoneNum == null) {
        break missingId;
      }

      id = R.id.registerBtn;
      CircleImageView registerBtn = ViewBindings.findChildViewById(rootView, id);
      if (registerBtn == null) {
        break missingId;
      }

      id = R.id.ssn;
      TextInputLayout ssn = ViewBindings.findChildViewById(rootView, id);
      if (ssn == null) {
        break missingId;
      }

      id = R.id.toolbarRL;
      RelativeLayout toolbarRL = ViewBindings.findChildViewById(rootView, id);
      if (toolbarRL == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ScrollView) rootView, BOD, addressInputEditText,
          addressTil, assn, backBtn, birthTil, email, emailInput, firstname, fname, lastname, lname,
          passwordInputEditText, passwordTil, phone, phoneNum, registerBtn, ssn, toolbarRL);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
